
app.js
******

**ПОЛЯ ОБЪЕКТА App**

* **middlewareName** - имя серверной части сервиса, на данный момент задано по дефолту, как "Microimpuls IPTV/OTT Middleware (c) Microimpuls LLC, http://www.microimpuls.com"
* **device** - устройство просмотра, в дальнейшем, уже внутри шаблона, этому полю будет присвоен объект Device.
* **display** - поле, представляющее собой объект класса BaseDisplay.
* **settings** - поле, представляющее собой объект класса Settings("наследуется" от BaseSettings), который в каждом шаблоне свой.
* **data** - поле, представляющее собой объект класса BaseData.
* **player** - поле, представляющее собой объект класса Player("наследуется" от BasePlayer), который в каждом шаблоне свой.
* **playerScreen, loginScreen, mainmenuScreen, tvChannelsScreen, epgScreen, settingsScreen, infoScreen, videoCatalogScreen, videoScreen** - объявление основных экранов сервиса, все остальные экраны для каждого шаблона объявляются и определяются внутри шаблонов.
* **clientSettings** - поле клиентских настроек, весь перечень возможных полей этого объекта представлен в app.js, там же они инициализированы дефолтными значениями и там же происходит присваивание этому полю объекта CLIENT_SETTINGS (из файла client.js).

**Поля clientSettings:**

* **client_id** - *int* - идентификатор клиента в Microimpuls Middleware, для других платформ задаётся 0.
* **api_key** - *string* - ключ доступа к Microimpuls Middleware, для других платформ задаётся пустой строкой.
* **api_url** - *string* - адрес Middleware, по которому будет происходить доступ к её API.
* **template_name** - *string* - системное имя шаблона (``classic``, ``cti``, ``focus``, ``impuls``, ``iridium``, ``orbit``).
* **template_size** - *object* - размер дисплея шаблона (1280х720, 1920х1080 и т.д.). Пример:

    ``'template_size': { 'classic': { '720x576': [720, 576] }, 'impuls': { 'default': [1280, 720] } }``

* **settings_filename** - *string* - название файла, где хранятся куки.
* **site_url** - *string* - адрес сайта сервиса.
* **debug** - *bool* -  флаг, отображающий консоль разработчика.
* **signup_auto_activation_period** - *int* - количество дней, после которых сервис автоматически запросит активацию (оплату), другими словами - бесплатный период просмотра сервиса.
* **show_welcome_message** - *bool* - флаг, отображающий, показывать ли приветственное попап-сообщение пользователю при первом входе.
* **welcome_message** - *string* - текст, содержащийся в приветственном попап-сообщении.
* **registration_available** - *bool* - флаг, отвечающий за возможность регистрации нового пользователя прямо из приложения.
* **template_styles** - *object* - объект типа:

    ``{ 'template_name': ['style_template_name1', 'style_template_name2', ...] }``

    где ``template_name`` - системное имя шаблона, а ``style_template_name...`` - системные названия доступных в данном шаблоне стилевых оформлений. На данный момент функционал смены стилей реализован только в шаблоне ``impuls`` (стили ``modern``, ``main``).

* **settings_menu_custom_items** - *list* - массив кастомных пунктов экрана настроек, на данный момент используется только для ``impuls``. В примере массив всех возможных пунктов шаблона ``impuls`` (первые 4 пункта добавлены по умолчанию):

    ``['buffersize', 'timezone', 'auto-launch-player', 'logout', 'template-style', 'lang']``

* **auth_mode** - *string* - режимы авторизации ('password' - по паролю и номеру абонемента, 'abonement' - только по номеру абонемента, 'device_uid' - по устройству).
* **play_record_continuously** - *bool* - (только для ``focus``) флаг, отвечающий за то, непрерывно ли идут записи архива при их просмотре. В случае, если флаг равен false, после окончания передачи архива просмотр прерывается и плеер останавливается.
* **server_rewind_mode** - *bool* - (только для ``focus``) флаг, позволяющий выбрать серверную перемотку. По умолчанию перемотка производится средствами плеера устройства, но в случае включения этого флага при перемотке производится запрос на сервер и в ответ приходит новая ссылка, после чего проигрывание перезапускается.
* **use_template_default_resolution** - *bool* - (только для ``focus``) флаг, отвечающий за использования графического разрешения по умолчанию для данного шаблона.
* **show_disconnect_message** - *bool* - (только для ``focus``) флаг, отвечающий за показ сообщения о разрыве Интернет-соединения.
* **samsung_guidelines_compatibility_mode** - *bool* - флаг, при включении которого логика переходов и нажатий подстраивается под политику Samsung.
* **auto_launch_last_viewed_channel** - *bool* - флаг, отвечающий за автозапуск последнего просмотренного канала при включении приложения.
* **programs_limit_for_channel_list_request** - *int* - задаёт максимальное количество программ для каждого канала при запросе списка каналов. Примечание: для оптимизации для каждого канала запрашивается не только текущая передача, но и несколько с запасом, с целью уменьшения количества обращений на сервер.
* **default_timezone** - *int* - часовой пояс по умолчанию.
* **default_buffersize** - *int* - размер буферизации по умолчанию (структуру с перечислением значений можно найти в settings.js).
* **default_lang** - *int* - язык приложения по умолчанию (структуру с перечислением значений можно найти в settings.js)

**МЕТОДЫ**

* **detectTemplate()**

*Определяет имя текущего шаблона.*

+----------------------+----------+-----------------------------------------------------------------------+
| Возращаемое значение | *string* | Имя шаблона либо пустая строка в случае неудачи                       |
+----------------------+----------+-----------------------------------------------------------------------+
|                      | App.detectTemplate(); // ``impuls`` -> app.js                                    |
|  Пример вызова       +----------------------------------------------------------------------------------+
|                      | Считывание информации о шаблоне при запуске приложения                           |
+----------------------+----------------------------------------------------------------------------------+

* **reloadToTemplate(templateName)**

*Запись в cookie-файл имени шаблона и его загрузка.*

+----------------------+---------------+----------+----------------------------------------------------------+
| Принимаемое значение | templateName  | *string* | Имя шаблона                                              |
+----------------------+---------------+----------+----------------------------------------------------------+
|                      | App.reloadToTemplate(this.clientSettings['template_name']); // ``impuls`` -> app.js |
|  Пример вызова       +-------------------------------------------------------------------------------------+
|                      | Перезагрузка шаблона при запуске приложения                                         |
+----------------------+-------------------------------------------------------------------------------------+

* **detectAndReloadTemplate(templateName, force)**

*Определение имени шаблона, запись его имени в cookie-файл и загрузка.*

+----------------------+--------------+----------+---------------------------------------------------+
|                      | templateName | *string* | Имя шаблона                                       |
| Принимаемые значения +--------------+----------+---------------------------------------------------+
|                      | force        | *bool*   |                                                   |
+----------------------+--------------+----------+---------------------------------------------------+
| Возращаемое значение | *bool*       |                                                              |
+----------------------+--------------+--------------------------------------------------------------+
|                      | App.detectAndReloadTemplate(settings['template']); // ``impuls`` -> init.js |
|  Пример вызова       +-----------------------------------------------------------------------------+
|                      |                                                                             |
+----------------------+-----------------------------------------------------------------------------+

* **setAccountTemplate(templateName)**

*Запись переданного имени шаблона в поле 'account_template' cookie-файла и перезагрузка текущего шаблона.*

+----------------------+---------------+----------+-------------------------------------------------------+
| Принимаемое значение | templateName  | *string* | Имя шаблона абонента                                  |
+----------------------+---------------+----------+-------------------------------------------------------+
|                      | App.setAccountTemplate(App.data.getTemplate()); // ``impuls`` -> login.screen.js |
|  Пример вызова       +----------------------------------------------------------------------------------+
|                      | Запись в cookie-файл шаблона абонента при произведении входа в систему           |
+----------------------+----------------------------------------------------------------------------------+

Примечание. Понятие шаблона абонента связано с возможностью смены стиля оформления приложения, то есть в данном случае имеется ввиду выбранный пользователем шаблон оформления в экране настроек.

* **resetAccountTemplate()**

*Сброс имён шаблона абонента и шаблона по дефолту из cookie-файла.*

+----------------------+--------------------------------------------------------------------------------+
|                      | App.resetAccountTemplate(); // ``impuls`` -> login.screen.js                   |
|  Пример вызова       +--------------------------------------------------------------------------------+
|                      | Очистка cookie-файла перед тем как произвести вход в систему                   |
+----------------------+--------------------------------------------------------------------------------+

* **fireEvent(eventType, eventArgument)**

*Запуск функций обработки событий.*

+----------------------+---------------+-----------+------------------------------------------------------+
|                      | eventType     | *int*     | Тип произошедшего события                            |
| Принимаемые значения +---------------+-----------+------------------------------------------------------+
|                      | eventArgument | *anyType* | Аргумент, с которым будет запущена функция обработки |
+----------------------+---------------+-----------+------------------------------------------------------+
|                      | App.fireEvent(App.EVENT_ON_DEVICE_KEY_EVENT, keyCode); // ``impuls`` -> app.js   |
|  Пример вызова       +----------------------------------------------------------------------------------+
|                      | Запуск функции, срабатывающей при нажатии какой-либо клавиши c кодом keyCode     |
+----------------------+----------------------------------------------------------------------------------+

**События:**

+-----------------------------------+----------+----------------------------------------------------+
| Событие                           | Значение | Описание                                           |
+-----------------------------------+----------+----------------------------------------------------+
| EVENT_ON_APP_INIT_BEGIN           | 0        | Начало инициализации приложения                    |
+-----------------------------------+----------+----------------------------------------------------+
| EVENT_ON_APP_INIT_END             | 1        | Окончание инициализации приложения                 |
+-----------------------------------+----------+----------------------------------------------------+
| EVENT_ON_DEVICE_INIT_BEGIN        | 2        | Начало инициализации устройства                    |
+-----------------------------------+----------+----------------------------------------------------+
| EVENT_ON_DEVICE_INIT_END          | 3        | Окончание инициализации устройства                 |
+-----------------------------------+----------+----------------------------------------------------+
| EVENT_ON_DEVICE_KEY_EVENT         | 4        | Событие нажатия клавиши                            |
+-----------------------------------+----------+----------------------------------------------------+
| EVENT_ON_ACCOUNT_LOGIN_SUCCESSFUL | 5        | Успешная авторизация                               |
+-----------------------------------+----------+----------------------------------------------------+